// Generated by CoffeeScript 1.6.0
(function() {
  var $, chooser_options, dropbox;

  $ = this.jQuery;

  dropbox = this.Dropbox;

  chooser_options = this.lowtone_dropbox_chooser;

  $.fn.dropbox_chooser = function(method) {
    var chooser_callback, defaults, methods;
    defaults = {
      linkType: 'direct',
      multiselect: false
    };
    chooser_callback = function(files, options) {
      var data, success;
      data = {
        action: "lowtone_dropbox_chooser_" + options.chooser_id,
        chooser_id: options.chooser_id,
        files: files
      };
      success = function(response) {
        if (!response.meta) {
          return;
        }
        switch (response.meta.code) {
          case 200:
            if (!response.data) {
              return;
            }
            return console.dir(response.data);
        }
      };
      return $.getJSON(chooser_options.ajaxurl, data, success);
    };
    methods = {
      init: function(options) {
        var $element;
        $element = $(this);
        options = $.extend(null, $element.data('chooser' || {}), options);
        return $element.click(function() {
          return methods.open(options);
        });
      },
      open: function(options) {
        options.success = function(files) {
          return chooser_callback(files, options);
        };
        options = $.extend(null, defaults, options);
        return dropbox.choose(options);
      }
    };
    if (methods[method]) {
      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (typeof method === "object" || !method) {
      return methods.init.apply(this, arguments);
    } else {
      return $.error("Method " + method + " does not exist on jQuery.picker");
    }
  };

  $(function() {
    return $('.lowtone.dropbox.chooser').dropbox_chooser();
  });

}).call(this);
